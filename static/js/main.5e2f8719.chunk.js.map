{"version":3,"sources":["actions/types.js","reducers/signs.js","actions/signs.js","reducers/index.js","store.js","services/btnClick.js","components/App.js","services/resultAccuracy.js","index.js"],"names":["ADD_NUM","ADD_SIGN","CLEAR_SIGNS","CLEAR_LAST","SET_RES","ADD_OPEN_BRACKET","ADD_CLOSE_BRACKET","line","closingLine","resultLine","result","openingBracketCounter","closingBracketCounter","initialState","signs","getResult","signsTab","x","i","eval","err","removeLast","tab","resultTab","length","lastSignIsNum","tmpTab","lastSign","pop","isNaN","parseInt","penultimateSignIsNum","penultimateSign","removeSigns","onClearLast","state","checkLastSign","checkSign","sign","action","type","addNewNum","e","target","innerHTML","addNewSign","clearSigns","clearLast","allReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","res","document","querySelectorAll","operation","btnEqualClick","getState","className","style","display","numberClick","dispatch","App","Fragment","id","this","props","resArr","toString","split","toFixed","setResultAccuracy","onClick","onClearSigns","onAddNewSign","React","Component","mapDispatchToProps","onAddNewNum","connect","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5e2f8719.chunk.js","sourcesContent":["export const ADD_NUM = 'ADD_NUM'\r\nexport const ADD_SIGN = 'ADD_SIGN'\r\nexport const CLEAR_SIGNS = 'CLEAR_SIGNS'\r\nexport const CLEAR_LAST = 'CLEAR_LAST'\r\nexport const SET_RES = 'SET_RES'\r\nexport const ADD_OPEN_BRACKET = 'ADD_OPEN_BRACKET'\r\nexport const ADD_CLOSE_BRACKET = 'ADD_CLOSE_BRACKET'","import {ADD_NUM,ADD_SIGN,CLEAR_SIGNS,CLEAR_LAST,SET_RES,ADD_OPEN_BRACKET,ADD_CLOSE_BRACKET} from '../actions/types'\r\nimport {setResult} from '../actions/signs'\r\n\r\nlet line =\"\";\r\nlet closingLine =\"\";\r\nlet resultLine =\"\";\r\nlet result =\"\";\r\n\r\nlet openingBracketCounter = 0;\r\nlet closingBracketCounter = 0;\r\n\r\nlet initialState ={\r\n    signs:[],\r\n    result:0\r\n}\r\n\r\nconst getResult = (signsTab) =>{\r\n    \r\n    line =\"\";\r\n    closingLine =\"\";\r\n    openingBracketCounter=0;\r\n    closingBracketCounter=0;\r\n    for (let x in signsTab){\r\n        line+=signsTab[x];\r\n    if(signsTab[x]==\"(\") openingBracketCounter++;\r\n    if(signsTab[x]==\")\") closingBracketCounter++;\r\n    }\r\n    for (let i=0;i<(openingBracketCounter-closingBracketCounter);i++){\r\n        closingLine +=\")\";\r\n    }\r\n    resultLine = line+closingLine;\r\n    try{\r\n        result = eval(resultLine);\r\n    }\r\n    catch(err){\r\n        result =\"error,try again\"\r\n    }\r\n    return result;\r\n}\r\n\r\nconst removeLast=tab=>{\r\n    let resultTab = [];\r\n    let tmpResultTab = [];\r\n    for(let i =0;i<tab.length-1;i++){\r\n        resultTab[i]=tab[i];\r\n    }\r\n    return resultTab;\r\n}\r\nconst lastSignIsNum = tab=>{\r\n    let tmpTab =[];\r\n    for(let i=0;i<tab.length;i++){\r\n        tmpTab[i]=tab[i];\r\n    }\r\n    let lastSign = tmpTab.pop();\r\n    if(lastSign==\"(\"){\r\n        openingBracketCounter--;\r\n    }\r\n    if(lastSign==\")\"){\r\n        closingBracketCounter--;\r\n    }\r\n    return (!isNaN(parseInt(lastSign)));\r\n}\r\nconst penultimateSignIsNum = tab=>{\r\n    let tmpTab =[];\r\n    for(let i=0;i<tab.length-1;i++){\r\n        tmpTab[i]=tab[i];\r\n    }\r\n    let penultimateSign = tmpTab.pop();\r\n    if(penultimateSign==\"(\"){\r\n        openingBracketCounter--;\r\n    }\r\n    if(penultimateSign==\")\"){\r\n        closingBracketCounter--;\r\n    }\r\n    return (!isNaN(parseInt(penultimateSign)));\r\n}\r\nconst removeSigns = tab =>{\r\n    let tmpTab = [];\r\n    for (let i=0;i<tab.length-1;i++){\r\n        tmpTab[i]=tab[i]\r\n    }\r\n    while(true){\r\n        if((isNaN(tmpTab[tmpTab.length-1]))&&(tmpTab.length>0)&&(tmpTab[tmpTab.length-1]!=\")\")){\r\n            tmpTab.pop();\r\n        }\r\n        else{\r\n            break;\r\n        }\r\n    }\r\n    return tmpTab;\r\n}\r\nconst onClearLast = state =>{\r\n    if(penultimateSignIsNum(state.signs)){\r\n        return {\r\n            result:getResult(removeLast(state.signs)),\r\n            signs:removeLast(state.signs)\r\n        };\r\n    }\r\n    else{\r\n        return {\r\n            signs:removeSigns(state.signs),\r\n            result:getResult(removeSigns(state.signs))\r\n\r\n        };\r\n    }\r\n    \r\n}\r\nconst checkLastSign = signs =>{\r\n    return signs[signs.length-1];\r\n}\r\nconst checkSign=(signs,sign)=>{\r\n    if((sign==\")\")&&(openingBracketCounter<=closingBracketCounter)){\r\n        openingBracketCounter++;\r\n        if(lastSignIsNum(signs)){\r\n            return [\"*\",\"(\"];\r\n        }else{\r\n            return [\"(\"];\r\n        }\r\n    } \r\n    if((sign==\"(\")&&((lastSignIsNum(signs))||(checkLastSign(signs)==\")\"))){\r\n        openingBracketCounter++;\r\n        return [\"*\",\"(\"];\r\n    }\r\n    if((isNaN(sign))&&((!lastSignIsNum(signs))&&(sign!=\")\")&&(sign!=\"(\"))){\r\n        return [sign];\r\n    }\r\n    if(sign==\"(\") openingBracketCounter++;\r\n    if(sign==\")\") closingBracketCounter++;\r\n    return [sign];\r\n}\r\n\r\n\r\nexport const signs = (state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ADD_NUM:\r\n            return {\r\n                result:getResult([...state.signs,action.sign]),\r\n                signs:[...state.signs,action.sign]\r\n            }\r\n        case ADD_SIGN:\r\n            return {\r\n                ...state,\r\n                signs:[...state.signs,...checkSign(state.signs,action.sign)]\r\n            }\r\n        case CLEAR_SIGNS:\r\n            return initialState;\r\n        case CLEAR_LAST:\r\n            return onClearLast(state);\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_NUM,ADD_SIGN,CLEAR_SIGNS,CLEAR_LAST,SET_RES,ADD_OPEN_BRACKET,ADD_CLOSE_BRACKET} from './types'\r\n\r\nexport const addNewNum = e =>{\r\n    return{\r\n        type: ADD_NUM,\r\n        sign: e.target.innerHTML\r\n    }\r\n}\r\nexport const addNewSign = e =>{\r\n    return{\r\n        type: ADD_SIGN,\r\n        sign: e.target.innerHTML\r\n    }\r\n}\r\nexport const clearSigns = () =>{\r\n    return {\r\n        type: CLEAR_SIGNS\r\n    }\r\n}\r\nexport const clearLast = () =>{\r\n    return {\r\n        type: CLEAR_LAST\r\n    }\r\n}\r\nexport const setResult = (res) =>{\r\n    return {\r\n        type: SET_RES,\r\n        result:res\r\n    }\r\n}\r\nexport const addOpenBracket = () =>{\r\n    return {\r\n        type: ADD_OPEN_BRACKET\r\n    }\r\n}\r\nexport const addCloseBracket = () =>{\r\n    return {\r\n        type: ADD_CLOSE_BRACKET\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport {signs} from './signs'\r\n\r\nconst allReducers = combineReducers ({\r\n    signs,\r\n})\r\n\r\nexport default allReducers;","import {createStore} from 'redux'\r\nimport allReducers from'./reducers'\r\n\r\nconst store = createStore (\r\n    allReducers,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import store from '../store'\r\nimport {addNewNum,addNewSign,clearSigns,clearLast} from '../actions/signs'\r\n\r\nlet res = document.querySelectorAll(\"#display #calcResult div:nth-of-type(2)\")[0];\r\nlet operation = document.querySelectorAll(\"#display #calcResult div:nth-of-type(1)\")[0];\r\n\r\nexport const btnEqualClick = e =>{\r\n    if(store.getState().signs.signs[0]){\r\n        res = document.querySelectorAll(\"#display #calcResult div:nth-of-type(2)\")[0];\r\n        operation = document.querySelectorAll(\"#display #calcResult div:nth-of-type(1)\")[0];\r\n        res.className = res.className==\"result-before\"? \"result-after\":\"\";\r\n        operation.style.display = \"none\"; \r\n    }\r\n   \r\n}\r\nexport const numberClick = (e) =>{\r\n        if(res){\r\n            if(res.className==\"result-after\"){\r\n                store.dispatch(clearSigns());\r\n                res.className=\"result-before\";\r\n                operation.style.display= \"block\";\r\n            } \r\n        }\r\n        store.dispatch(addNewNum(e))\r\n    }","import React from 'react';\nimport {btnEqualClick,numberClick} from '../services/btnClick'\nimport {setResultAccuracy} from '../services/resultAccuracy'\nimport {connect} from 'react-redux'\nimport {addNewNum,addNewSign,clearSigns,clearLast} from '../actions/signs'\n\n\nclass App extends React.Component{\n    \n    render(){\n         return (\n      <React.Fragment>\n       <div id=\"display\">\n            {this.props.signs[0]?\n               <div id=\"calcResult\">\n                   <div className=\"operation\">{this.props.signs}</div>\n                   <div className=\"result-before\">{setResultAccuracy(this.props.result)}</div>\n               </div>\n               :\n                <div id=\"desc\">Type numbers</div>\n           }\n            \n      </div>\n      <div id=\"buttons\">\n          <div>\n            <button onClick={this.props.onClearSigns}>C</button> \n            <button onClick={this.props.onClearLast}>del</button> \n            <button onClick={this.props.onAddNewSign}>/</button> \n            <button onClick={this.props.onAddNewSign}>*</button> \n          </div>\n          <div>\n            <button onClick={numberClick}>7</button> \n            <button onClick={numberClick}>8</button> \n            <button onClick={numberClick}>9</button> \n            <button onClick={this.props.onAddNewSign}>-</button> \n          </div>\n          <div>\n            <button onClick={numberClick}>4</button> \n            <button onClick={numberClick}>5</button> \n            <button onClick={numberClick}>6</button> \n            <button onClick={this.props.onAddNewSign}>+</button> \n          </div>\n          <div>\n            <button onClick={numberClick}>1</button> \n            <button onClick={numberClick}>2</button> \n            <button onClick={numberClick}>3</button> \n            <button onClick={this.props.onAddNewSign}>(</button> \n          </div>\n          <div>\n            <button onClick={this.props.onAddNewSign}>.</button> \n            <button onClick={numberClick}>0</button> \n             <button onClick={this.props.onAddNewSign}>)</button> \n            <button onClick={btnEqualClick}>=</button> \n          </div>\n      </div>\n      </React.Fragment>\n    );\n    }\n \n}\n\nconst mapStateToProps = state =>({\n    signs:state.signs.signs,\n    result:state.signs.result\n})\nconst mapDispatchToProps = ({\n    onAddNewNum:addNewNum,\n    onAddNewSign:addNewSign,\n    onClearSigns : clearSigns,\n    onClearLast:clearLast\n})\n\nexport default connect (mapStateToProps,mapDispatchToProps)(App);","const maxAccuracy = 7;\r\n\r\nexport const setResultAccuracy = res =>{\r\n    let resArr = res.toString().split(\".\");\r\n    if(resArr[1]){\r\n        if(resArr[1].length>maxAccuracy){\r\n            return res.toFixed(maxAccuracy)\r\n        }\r\n        else{\r\n            return res;\r\n        }\r\n    }\r\n    else{\r\n        return res;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport store from './store'\nimport{Provider} from 'react-redux'\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n"],"sourceRoot":""}